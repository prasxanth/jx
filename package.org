#+TITLE: Package
#+SUBTITLE: Shell script source code for JX
#+AUTHOR: Prashanth Kumar
#+DATE: December 31, 2020

Open and tangle this =org= file in Emacs to get the =jx= file and make it executable (~chmod +x~).

Make any changes or additions to the code below (for example, add new libraries) to extend functionality.

#+BEGIN_SRC shell :tangle jx :shebang "#!/usr/bin/ijconsole"
0 : 0
Script is to be used with piped input (stdin)
Verb to execute on data is given as first argument
Current limitation is that it can only deal with numeric data types

All examples that follow are with iris dataset.
"username$" is used to refer to the bash command line prompt.

The mean of columns 2-5 is calculated as,

-------------------------------------------------------------------------------
username$ csvcut -c 2-5 iris.csv | tail -n +2 |  jx "(+/ % #)"

5.84333,3.05733,3.758,1.19933
-------------------------------------------------------------------------------

The following packages are preloaded,
1. stats
2. stats/distribs
3. math/fftw

So various stats can be obtained as below,
-------------------------------------------------------------------------------
username$ csvcut -c 2-5 iris.csv | tail -n +2 |  jx "(#, mean, median, stddev)"

150,150,150,150
5.84333,3.05733,3.758,1.19933
5.8,3,4.35,1.3
0.828066,0.435866,1.7653,0.762238
-------------------------------------------------------------------------------

Descriptive statistics,
-------------------------------------------------------------------------------
username$ csvcut -c 2-5 iris.csv | tail -n +2 |  jx "dstats"

"sample size:       150","sample size:       150","sample size:        150","sample size:        150"
"minimum:           4.3","minimum:             2","minimum:              1","minimum:            0.1"
"maximum:           7.9","maximum:           4.4","maximum:            6.9","maximum:            2.5"
"median:            5.8","median:              3","median:            4.35","median:             1.3"
"mean:          5.84333","mean:          3.05733","mean:             3.758","mean:           1.19933"
"std devn:     0.828066","std devn:     0.435866","std devn:        1.7653","std devn:      0.762238"
"skewness:     0.311753","skewness:     0.315767","skewness:     _0.272128","skewness:     _0.101934"
"kurtosis:      2.42643","kurtosis:      3.18098","kurtosis:       1.60446","kurtosis:       1.66393"
-------------------------------------------------------------------------------

To calculate the fft,
-------------------------------------------------------------------------------
username$ csvcut -c 2-5 iris.csv | tail -n +2 |  jx "fftw"
-------------------------------------------------------------------------------
)

load 'stats'
load 'stats/distribs'
load 'math/fftw'

load 'tables/csv'

rmlf =: 3 : ('(y ~: LF) # y')

NB. https://code.jsoftware.com/wiki/Essays/Inverted_Table
invtbl =: <@(>"1)@|:

NB. https://code.jsoftware.com/wiki/Essays/Inverted_Table
boxtbl =: |:@:(<"_1&>)

instr =: (','&splitstring);.2 @ stdin ' '

data =: invtbl ".@rmlf&.> instr
strdata =: ": &.> data

verb =: > {: ARGV
NB. Verb to prepend before data in each cell (see jcmd)
preverb =: (< '' joinstring verb;' ')

jcmd =: preverb ,&.> strdata NB. Generate command to execute in each cell

result =: boxtbl ,. &.> ". &.> jcmd
echo makecsv result
exit''
#+END_SRC


#+BEGIN_SRC shell :session jx :results silent
chmod +x ./jx
#+END_SRC
